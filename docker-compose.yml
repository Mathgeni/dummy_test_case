version: '3.8'

services:
  db:
    image: postgres:15
    container_name: fast_db
    env_file:
      - .env-non-dev
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis
    container_name: mutex
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 10

  server_1:
    build:
      context: ./
      dockerfile: ./dummy_server/Dockerfile
    container_name: fastapi_server_1
    env_file:
      - .env-non-dev
    depends_on:
      redis:
         condition: service_healthy
      db:
        condition: service_healthy
    command: ["/backend/docker/app.sh"]
    ports:
      - "9000:8000"
    healthcheck:
      test: curl --fail http://localhost:9000 || exit 1
      interval: 10s
      timeout: 20s
      retries: 5

  server_2:
    build:
      context: ./
      dockerfile: ./dummy_server/Dockerfile
    container_name: fastapi_server_2
    env_file:
      - .env-non-dev
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: [ "/backend/docker/app.sh" ]
    ports:
      - "9001:8000"
    healthcheck:
      test: curl --fail http://localhost:9001 || exit 1
      interval: 10s
      timeout: 20s
      retries: 5
#
#  client:
#    build:
#      context: ./
#      dockerfile: ./dummy_client/Dockerfile
#    container_name: client
#    depends_on:
#      server_2:
#        condition: service_healthy
#      server_1:
#        condition: service_healthy
